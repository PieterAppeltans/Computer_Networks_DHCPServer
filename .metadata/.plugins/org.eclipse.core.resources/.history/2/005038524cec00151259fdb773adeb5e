import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.net.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class DHCPServer {
	
	public DHCPServer(String configurationAddress){
		try{
			DHCPServer.processConfigurationFile(configurationAddress);
		}
		catch (FileNotFoundException e){
			ErrorPrinter.print("Configuration File not found");
		}
		
	}
	public DHCPServer(int port,byte[] start,byte[] end, byte[] mask,int defaultLeaseTime,int maxLeaseTime,int minLeaseTime){
		this.port = port;
		this.addressKeeper = new IPAddressKeeper(start, end, mask, defaultLeaseTime, maxLeaseTime, minLeaseTime);
	} 
	
	private static void processConfigurationFile(String configurationAddress) throws FileNotFoundException {
		BufferedReader br = new BufferedReader(new FileReader(configurationAddress));

		try {
			new BufferedReader(new FileReader(configurationAddress));
		    String line = br.readLine();
		    while (line != null) {
		    	
		    }
		}
		catch (Exception e){
			e.printStackTrace();
		}
		finally {
		    br.close();
		}
		
	}

	public void run() throws Exception{
		ExecutorService executor = Executors.newFixedThreadPool(5);
		DatagramSocket serverSocket = new DatagramSocket(this.port);
		byte[] receiveData = new byte[this.bufferSize];
		while(true){                   
			DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
			serverSocket.receive(receivePacket);
			//System.out.println("RECEIVED FROM CLIENT:\t" + DHCPMessage.printByteArrayHexa(receiveData));
			Runnable thread = new DHCPServerThread(serverSocket,receivePacket,this.addressKeeper,InetAddress.getByName("localhost").getAddress());
			executor.execute(thread);
		}
	}
	
	public int getBufferSize(){
		return this.bufferSize;
	}
	
	public void setBufferSize(int buffersize){
		this.bufferSize = buffersize;
	}
	private IPAddressKeeper addressKeeper;
	private int bufferSize = 576;
	private int port;
	
}