import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.Random;

public class MessageBuilder {
	public MessageBuilder(){}
	public byte[] generateMessage(DHCPOpcode opcode,DHCPhtype htype,byte[] xid,short secs,
			byte[] ciaddr,byte[] yiaddr,byte[]siaddr,byte[] giaddr){
		if (xid == null){
			xid = new byte[4];
			ByteBuffer bufxid = ByteBuffer.wrap(xid);
			Random rand = new Random();
			int t = rand.nextInt();
			bufxid.putInt(t);
		}
		byte[] result = new byte[100];
		ByteBuffer buf = ByteBuffer.wrap(result);
		// opcode
		buf.put(opcode.getByte());
		// htype
		buf.put(htype.getByte());
		// hlen
		buf.put((byte) 6);
		//  hops 
		buf.put((byte) 0);
		//xid 
		buf.put(xid);
		// secs
		buf.putShort(secs);
		// flags
		buf.put((byte) 0);
		buf.put((byte) 0);
		buf.put(ciaddr);
		buf.put(yiaddr);
		buf.put(siaddr);
		buf.put(giaddr);
		for (int i=0;i<(64+128);i++){
			buf.put((byte)0);
		} 
		// Begin option met magic cookie(99.130.83.99) en eindig met end
		buf.put((byte)99);
		buf.put((byte)130);
		buf.put((byte)83);
		buf.put((byte)99);
		System.out.println(Arrays.toString(result));
		return null;
	}
	public byte[] magicCookie = {(byte)99,(byte)130,(byte)83,(byte)99};
}
