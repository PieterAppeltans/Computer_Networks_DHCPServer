import java.util.Hashtable;
import java.util.Map;
/**
 * Two way searchable map. You can easy lookup in both directions.
 *
 *
 * @param <K> The class of the first key element.
 * @param <V> The class of the sec
 * @author Pieter Appeltans & Hans Cauwenbergh
 */
public class BidirectionalMap <K extends Object, V extends Object> {
	
	  private Map<K,V> forward = new Hashtable<K, V>();
	  private Map<V,K> backward = new Hashtable<V, K>();
	  /**
	   * Add a new key-value pair to the map
	   * @param key The key of the new pair.
	   * @param value The value of the new pair.
	   */
	  public synchronized void add(K key, V value) {
	    forward.put(key, value);
	    backward.put(value, key);
	  }
	  /**
	   * A method to search the map by a given key
	   * @param Key Type: K The key from which the value must be returned
	   * @return Value Type: V The value which is mapped to the given key. 
	   */
	  public synchronized V getForward(K key) {
	    return forward.get(key);
	  }
	  /**
	   * Method to search the map by a given value.
	   * @param Value The value from which the key must be returned.
	   * @return Key The key that has as value the given value.
	   */
	  public synchronized K getBackward(V value) {
	    return backward.get(value);
	  }
	  
}